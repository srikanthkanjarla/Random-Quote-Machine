{"version":3,"sources":["components/Header.js","components/RandomQuote.js","components/TwitterIntentLink.js","components/GetQuoteButton.js","components/Footer.js","App.js","index.js"],"names":["Header","react_default","a","createElement","className","split","map","letter","randomQuote","props","quoteText","quoteAuthor","QuoteButton","src","onTweetQuote","href","onClick","onGetNewQuote","type","Footer","target","rel","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","backgroundImageURL","twitterIntentURL","handleGetNewQuote","bind","assertThisInitialized","handleTweetQuote","getRandomImage","updateQuoteData","randomNum","Math","round","random","callbackMethodName","concat","END_POINT","_this2","window","data","text","author","getRandomQuote","url","callback","script","document","id","body","appendChild","getElementById","remove","getJsonp","_this3","fetch","then","imageURL","setState","length","replace","_this$state","_this$state2","style","backgroundImage","components_Header","components_RandomQuote","TwitterIntentLink","GetQuoteButton","components_Footer","React","Component","ReactDOM","render","src_App_0"],"mappings":"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","file":"static/js/main.2dc9cf14.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Header.css\";\n\nfunction Header() {\n  const headerText = \"QuoteMachine\";\n  return (\n    <header className=\"header\">\n      <div className=\"header-text\">\n        {headerText.split(\"\").map(letter => (\n          <span>{letter}</span>\n        ))}\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./RandomQuote.css\";\n\nfunction randomQuote(props) {\n  const { quoteText, quoteAuthor } = props;\n  return (\n    <div className=\"quote\">\n      <p className=\"quote-author\">{quoteAuthor}</p>\n      <p className=\"quote-text\">{quoteText}</p>\n    </div>\n  );\n}\nrandomQuote.propTypes = {\n  quoteText: PropTypes.string.isRequired,\n  quoteAuthor: PropTypes.string.isRequired\n};\nexport default randomQuote;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction QuoteButton(props) {\n  const { src, onTweetQuote } = props;\n  return (\n    <a href={src} className=\"btn btn-tweet\" onClick={onTweetQuote}>\n      Tweet\n    </a>\n  );\n}\nQuoteButton.propTypes = {\n  onTweetQuote: PropTypes.func.isRequired,\n  src: PropTypes.string.isRequired\n};\n\nexport default QuoteButton;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction QuoteButton(props) {\n  const { onGetNewQuote } = props;\n  return (\n    <button type=\"button\" className=\"btn btn-quote\" onClick={onGetNewQuote}>\n      New Quote\n    </button>\n  );\n}\nQuoteButton.propTypes = {\n  onGetNewQuote: PropTypes.func.isRequired\n};\n\nexport default QuoteButton;\n","import React from \"react\";\nimport \"./Footer.css\";\n\nfunction Footer() {\n  return (\n    <footer className=\"footer\">\n      <span>\n        View Source on{\" \"}\n        <a\n          href=\"https://github.com/srikanthkanjarla/Random-Quote-Machine\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Github\n        </a>\n      </span>\n      <span>\n        Images from{\" \"}\n        <a\n          href=\"https://unsplash.com/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Unsplash{\" \"}\n        </a>\n      </span>\n      <span>\n        Quotes API{\" \"}\n        <a\n          href=\"https://forismatic.com/en/api/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          forismatic\n        </a>\n      </span>\n    </footer>\n  );\n}\nexport default Footer;\n","import React from \"react\";\nimport Header from \"./components/Header\";\nimport RandomQuote from \"./components/RandomQuote\";\nimport TwitterIntentLink from \"./components/TwitterIntentLink\";\nimport GetQuoteButton from \"./components/GetQuoteButton\";\nimport Footer from \"./components/Footer\";\nimport \"./App.css\";\nimport \"./components/Button.css\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      quoteText:\n        \"Be sure you put your feet in the right place, then stand firm\",\n      quoteAuthor: \"Abraham Lincoln\",\n      backgroundImageURL: \"\",\n      twitterIntentURL: \"\"\n    };\n    this.handleGetNewQuote = this.handleGetNewQuote.bind(this);\n    this.handleTweetQuote = this.handleTweetQuote.bind(this);\n    this.getRandomImage = this.getRandomImage.bind(this);\n    this.updateQuoteData = this.updateQuoteData.bind(this);\n\n    // JSONP callback method and quotes API end-point\n    this.randomNum = Math.round(10000 * Math.random());\n    this.callbackMethodName = `cb_${this.randomNum}`;\n    this.END_POINT =\n      \"https://api.forismatic.com/api/1.0/?method=getQuote&key=457653&format=jsonp&lang=en&jsonp=\";\n  }\n\n  componentDidMount() {\n    // JSONP global callback method\n    window[this.callbackMethodName] = data => {\n      this.updateQuoteData({ text: data.quoteText, author: data.quoteAuthor });\n    };\n    this.getRandomQuote();\n    this.getRandomImage();\n  }\n\n  // JSONP function call to API\n  getJsonp(url, callback) {\n    const script = document.createElement(\"script\");\n    script.id = `script_${this.callbackMethodName}`;\n    script.src = url + callback;\n    document.body.appendChild(script);\n    document.getElementById(script.id).remove();\n  }\n\n  getRandomQuote() {\n    this.getJsonp(this.END_POINT, this.callbackMethodName);\n  }\n\n  getRandomImage() {\n    fetch(\"https://source.unsplash.com/random/\")\n      .then(src => src.url)\n      .then(imageURL => {\n        this.setState({\n          backgroundImageURL: imageURL\n        });\n      });\n  }\n\n  updateQuoteData(data) {\n    if ((data.text + data.author).length < 278) {\n      this.setState({\n        quoteText: data.text.replace(\";\", \",\"),\n        quoteAuthor: data.author\n      });\n    } else {\n      this.getRandomQuote();\n    }\n  }\n\n  handleGetNewQuote() {\n    this.getRandomQuote();\n    this.getRandomImage();\n  }\n\n  handleTweetQuote() {\n    const { quoteText, quoteAuthor } = this.state;\n    this.setState({\n      twitterIntentURL: `https://twitter.com/intent/tweet?text=${quoteText}--${quoteAuthor}`\n    });\n  }\n\n  render() {\n    const {\n      quoteText,\n      quoteAuthor,\n      backgroundImageURL,\n      twitterIntentURL\n    } = this.state;\n    const style = {\n      backgroundImage: `linear-gradient(rgba(125, 17, 40,0.5),rgb(125,17,40)),url(${backgroundImageURL})`\n    };\n    return (\n      <div className=\"app\" style={style}>\n        <Header />\n        <RandomQuote quoteText={quoteText} quoteAuthor={quoteAuthor} />\n        <div className=\"button-controls\">\n          <TwitterIntentLink\n            src={twitterIntentURL}\n            onTweetQuote={this.handleTweetQuote}\n          />\n          <GetQuoteButton onGetNewQuote={this.handleGetNewQuote} />\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}